# A global configuration file
#
# usage is : source master.conf at the begining of a script
#
# The purposes are :
# - configuring bot behaviour
# - server selection
# - gather global settings

check_file_before_source() {
	if [ ! -f "$1" ]; then
		echo "*** Cannot find $1 file : cancel sourcing and exit"
		exit 1
	else
		if [ "$2" == "verbose" ]; then
			echo "*** $1 file found : sourcing"
		fi
		source $1
	fi
}

## win_id.conf exception : touch -a changes access time
# or creates file if not exists
touch -a win_id.conf

check_file_before_source win_id.conf
check_file_before_source view.conf
check_file_before_source switch.conf
check_file_before_source gameover.conf

## cooldown time in minutes for CPU (not magic spells)
# 8 minutes recommended during hot summer
COOLDOWN_TIME=4

## stop auto reset of daily timestamps for all servers
STOP_AUTO_DAILY_RESET=false

## enables split execution of dailies
ENABLE_SPLIT_DAILY=true

## maximum fight time is 20 rounds where nobody dies
MAX_WM_FIGHT_TIME=90

## number of clicks to ensure flushing all mails
N_FLUSH_MAILS=16

## handling config files templates updates
update_config_files() {
	# this array is local
	declare -a config_files_A=(
		"auto-accept.conf"
		"daily.conf"
		"ftree.conf"
		"gameover.conf"
		"glob-coord.conf"
		"map.conf"
		"master.conf"
		"s1.firestone.conf"
		"switch.conf"
		"view.conf"
		"win_id.conf"
	)
	for conf_f in "${config_files_A[@]}"; do
		echo "** processing $conf_f"
		local templ_f="$conf_f.template"
		diff "$templ_f" "$conf_f"

		local ans
		read -p "* update this file ? (y/n) " ans
		if [ "$ans" == "y" ]; then
			echo "* copy to $templ_f"
			cp "$conf_f" "$templ_f"
		else
			echo "* skip"
		fi
		read -p "* press any key to continue "
		echo
	done
}
